"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const F1Parser_1 = require("../F1Parser");
const CarTelemetryDataParser_1 = require("./CarTelemetryDataParser");
const PacketHeaderParser_1 = require("./PacketHeaderParser");
class PacketCarTelemetryDataParser extends F1Parser_1.F1Parser {
    constructor(buffer, packetFormat, bigintEnabled) {
        super();
        this.endianess('little')
            .nest('m_header', {
            type: new PacketHeaderParser_1.PacketHeaderParser(packetFormat, bigintEnabled),
        })
            .array('m_carTelemetryData', {
            length: packetFormat === 2020 || packetFormat === 2021 || packetFormat === 2022 ? 22 : 20,
            type: new CarTelemetryDataParser_1.CarTelemetryDataParser(packetFormat),
        });
        if (packetFormat === 2018 || packetFormat === 2019) {
            this.uint32le('m_buttonStatus');
        }
        if (packetFormat === 2020) {
            this.uint32le('m_buttonStatus')
                .uint8('m_mfdPanelIndex')
                .uint8('m_mfdPanelIndexSecondaryPlayer')
                .int8('m_suggestedGear');
        }
        if (packetFormat === 2021 || packetFormat === 2022) {
            this.uint8('m_mfdPanelIndex')
                .uint8('m_mfdPanelIndexSecondaryPlayer')
                .int8('m_suggestedGear');
        }
        this.data = this.fromBuffer(buffer);
    }
}
exports.PacketCarTelemetryDataParser = PacketCarTelemetryDataParser;
//# sourceMappingURL=PacketCarTelemetryDataParser.js.map